package modelo;

import config.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class TipoUbicacionDAO {

    Conexion cn = new Conexion();
    Connection con;
    PreparedStatement ps;
    ResultSet rs;

    int resp;

    // Método Listar
    public List<TipoUbicacion> listar() {

        String sql = "SELECT * FROM TipoUbicacion";
        List<TipoUbicacion> listaTipoUbicacion = new ArrayList<>();

        try {

            con = cn.Conexion();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            while (rs.next()) {
                TipoUbicacion tipoUbicacion = new TipoUbicacion();

                tipoUbicacion.setCodigoTipoUbicacion(rs.getInt("codigoTipoUbicacion"));
                tipoUbicacion.setDireccion(rs.getString("direccion"));

                listaTipoUbicacion.add(tipoUbicacion);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return listaTipoUbicacion;
    }

    // Método Agregar
    public int agregar(TipoUbicacion tipoUbicacion) {

        String sql = "INSERT INTO TipoUbicacion (direccion) VALUES (?)";

        try {
            con = cn.Conexion();
            ps = con.prepareStatement(sql);

            ps.setString(1, tipoUbicacion.getDireccion());

            ps.executeUpdate();

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("No se pudo agregar el registro");
        }

        return resp;
    }

    // Buscar por código
    public TipoUbicacion listarCodigoTipoUbicacion(int codigoTipoUbicacion) {

        TipoUbicacion tipoUbicacion = new TipoUbicacion();
        String sql = "SELECT * FROM TipoUbicacion WHERE codigoTipoUbicacion = ?";

        try {
            con = cn.Conexion();
            ps = con.prepareStatement(sql);
            ps.setInt(1, codigoTipoUbicacion);
            rs = ps.executeQuery();

            while (rs.next()) {
                tipoUbicacion.setCodigoTipoUbicacion(rs.getInt("codigoTipoUbicacion"));
                tipoUbicacion.setDireccion(rs.getString("direccion"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return tipoUbicacion;
    }

    // Método Editar
    public int actualizar(TipoUbicacion tipoUbicacion) {

        String sql = "UPDATE TipoUbicacion SET direccion = ? WHERE codigoTipoUbicacion = ?";

        try {
            con = cn.Conexion();
            ps = con.prepareStatement(sql);

            ps.setString(1, tipoUbicacion.getDireccion());
            ps.setInt(2, tipoUbicacion.getCodigoTipoUbicacion());

            ps.executeUpdate();

        } catch (Exception e) {
            e.printStackTrace();
        }

        return resp;
    }

    // Método Eliminar
    public void eliminar(int codigoTipoUbicacion) {
        String sql = "DELETE FROM TipoUbicacion WHERE codigoTipoUbicacion = ?";

        try {
            con = cn.Conexion();
            ps = con.prepareStatement(sql);
            ps.setInt(1, codigoTipoUbicacion);
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
